function psd_m = generate_spectrum(param_values, freq) % Return the model spectrum
x0 = zeros(1,13); % Initial conditions
x=zeros(1,13); % Vector of state variables
U=0; % Input is set to zero

M = struct(... % DCM model structure
    'dipfit', struct('location', '0', 'symmetry', '0', 'modality', 'LFP', 'type', 'LFP', 'symm', '0', 'Lpos', '0', 'Nm', '1', 'Nc', '1', 'model', 'LFP'),...  
    'IS', 'spm_csd_mtf',...
    'g', 'spm_gx_erp',...
    'f', 'spm_fx_lfp',...
    'x', zeros(1, 13),...
    'n', 13,...
    'pE', struct(),...
    'pC', struct(),...
    'hE', 8,...
    'hC', 1/128,...
    'm', 1,...
    'u', 0,...
    'U', 1.0000,...
    'l', 1,...
    'Hz', freq,...
    'dt', 1);

    % Model parameters
    M.pE = struct(...
    'R', [param_values(1), param_values(2)],...
    'T', [param_values(3), param_values(4)],...
    'G', param_values(5),...
    'H', [param_values(6) param_values(7)  param_values(8) param_values(9) param_values(10)],...
    'A', [param_values(11), param_values(12), param_values(13)],...
    'C', 0,...
    'D', param_values(14),...
    'I', param_values(15),...
    'Lpos', [0; 0; 0],...
    'L', 1,...
    'l', 1,...
    'J', [0 0 0 0 0 0 0 0 1 0 0 0 0],...
   'a', [param_values(16); param_values(17)],...
    'b', [param_values(18); param_values(19)],...
    'c', [param_values(20); param_values(21)],...
    'd', [param_values(22); param_values(23); param_values(24); param_values(25)],...
    'f', [param_values(26); param_values(27)]);
    P=M.pE;
    P.A = num2cell(P.A); 
    spectrum=spm_csd_mtf(P,M,U); % Use the parameter vector P to generate the spectrum.
    psd_m = real(spectrum{1});
    
return 
    
